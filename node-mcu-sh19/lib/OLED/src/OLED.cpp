#include "OLED.h"


void OLED::initDisplay() {
  // put your setup code here, to run once:
  Wire.begin();  
  this->display.begin(SSD1306_SWITCHCAPVCC, 0x3C);
}

void OLED::SendDisplay(uint32_t water)
{
  static const uint8_t PROGMEM copo_vazio [] = {
0x00,0x00
,0x00,0x00
,0x00,0x00
,0x00,0x00
,0x10,0x02
,0x10,0x02
,0x18,0x02
,0x08,0x06
,0x08,0x04
,0x08,0x04
,0x08,0x0c
,0x04,0x08
,0x04,0x08
,0x07,0xf8
,0x00,0x00
,0x00,0x00
};

static const uint8_t PROGMEM copo_cheio [] = {
0x00,0x00
,0x00,0x00
,0x00,0x00
,0x00,0x00
,0x17,0xfe
,0x17,0xfe
,0x1f,0xfe
,0x0b,0xfe
,0x0b,0xf4
,0x0b,0xf4
,0x0b,0xfc
,0x05,0xe8
,0x04,0x08
,0x07,0xf8
,0x00,0x00
,0x00,0x00
};

static const uint8_t PROGMEM copo_1_3 [] = {
0x00,0x00
,0x00,0x00
,0x00,0x00
,0x00,0x00
,0x10,0x02
,0x10,0x02
,0x18,0x02
,0x08,0x06
,0x08,0x04
,0x09,0xf4
,0x0b,0xfc
,0x05,0xe8
,0x04,0x08
,0x07,0xf8
,0x00,0x00
,0x00,0x00
};

static const uint8_t PROGMEM copo_2_3 [] = {
0x00,0x00
,0x00,0x00
,0x00,0x00
,0x00,0x00
,0x10,0x02
,0x10,0x02
,0x18,0x02
,0x0b,0xfe
,0x0b,0xf4
,0x0b,0xf4
,0x0b,0xfc
,0x05,0xe8
,0x04,0x08
,0x07,0xf8
,0x00,0x00
,0x00,0x00
};

    uint32_t pos=0;
    uint32_t  cupfull = 0;
    uint32_t restante = 0;
    uint32_t totalcopos = water/200;
    
    display.clearDisplay();  
    if(water <=1600)
    {
      cupfull= water/200; //copos cheios visiveis
      restante = water%200; //ml de copo não cheio
      if(cupfull!=0)
      {
        for(uint32_t i =0; i<cupfull; i++)
        {
          pos=i*16;
          display.drawBitmap(pos,0,copo_cheio,16,16,WHITE);
        }
        if(restante!=0)
        {
          SelectCupSize(pos+16,restante);
        }
        else
        {
          display.drawBitmap(pos+16,0,copo_vazio,16,16,WHITE);
        }
      }
      else
      {
        if(restante!=0)
        {
          SelectCupSize(0,restante);
        }
        else
        {
          display.drawBitmap(0,0,copo_vazio,16,16,WHITE);
        }
      }
    } 
    else
    {
      uint32_t ml = water%1600; //ml visiveis
      cupfull= ml/200; //copos cheios visiveis
      restante = ml%200; //ml de copo não cheio

      for(uint32_t i =0; i<cupfull; i++)
      {
        pos=i*16;
        display.drawBitmap(pos,0,copo_cheio,16,16,WHITE);
      }
      if(restante!=0)
      {
        SelectCupSize(pos+16,restante);
      }
      else
      {
         display.drawBitmap(pos+16,0,copo_vazio,16,16,WHITE);
      }
    }
    uint32_t litros = water/1000;
    uint32_t  deci= water%1000;
    deci = deci/100;
    display.setTextColor(WHITE);
    display.setTextSize(1);
    display.setCursor(0,16);
    display.print(litros);
    display.setCursor(19,16);
    display.print(".");
    display.setCursor(32,16);
    display.print(deci);
    display.setCursor(55,16);
    display.print("Litros");
    display.setCursor(0,25);
    display.print(totalcopos);
    display.setCursor(55,25);
    display.print("Copos");
    display.display();
}

void OLED::SelectCupSize(uint32_t pos,uint32_t restante)
{
    static const uint8_t PROGMEM copo_vazio [] = {
0x00,0x00
,0x00,0x00
,0x00,0x00
,0x00,0x00
,0x10,0x02
,0x10,0x02
,0x18,0x02
,0x08,0x06
,0x08,0x04
,0x08,0x04
,0x08,0x0c
,0x04,0x08
,0x04,0x08
,0x07,0xf8
,0x00,0x00
,0x00,0x00
};

static const uint8_t PROGMEM copo_cheio [] = {
0x00,0x00
,0x00,0x00
,0x00,0x00
,0x00,0x00
,0x17,0xfe
,0x17,0xfe
,0x1f,0xfe
,0x0b,0xfe
,0x0b,0xf4
,0x0b,0xf4
,0x0b,0xfc
,0x05,0xe8
,0x04,0x08
,0x07,0xf8
,0x00,0x00
,0x00,0x00
};

static const uint8_t PROGMEM copo_1_3 [] = {
0x00,0x00
,0x00,0x00
,0x00,0x00
,0x00,0x00
,0x10,0x02
,0x10,0x02
,0x18,0x02
,0x08,0x06
,0x08,0x04
,0x09,0xf4
,0x0b,0xfc
,0x05,0xe8
,0x04,0x08
,0x07,0xf8
,0x00,0x00
,0x00,0x00
};

static const uint8_t PROGMEM copo_2_3 [] = {
0x00,0x00
,0x00,0x00
,0x00,0x00
,0x00,0x00
,0x10,0x02
,0x10,0x02
,0x18,0x02
,0x0b,0xfe
,0x0b,0xf4
,0x0b,0xf4
,0x0b,0xfc
,0x05,0xe8
,0x04,0x08
,0x07,0xf8
,0x00,0x00
,0x00,0x00
};

  if(restante<=66)
  {
    display.drawBitmap(pos,0,copo_1_3,16,16,WHITE);
  }
  if(restante >66 && restante <=132)
  {
    display.drawBitmap(pos,0,copo_2_3,16,16,WHITE);
  }
  if(restante> 132 && restante <=200)
  {
    display.drawBitmap(pos,0,copo_cheio,16,16,WHITE);
  }
}

void OLED::ClearDisplay() {
  display.clearDisplay(); 
}